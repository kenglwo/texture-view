<!DOCTYPE html>
<html lang='ja'>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <title><%= title %></title>
	<style type="text/css">
		circle {
			opacity: 0.8;
			stroke-width: 2;
			stroke : black;
			fill : grey;
		}
		path {
			opacity: 0.8;
			stroke-width: 2;
			stroke : blue;
			fill : none;
		}
	</style>

    <link href="http://localhost/~Kento012/ex-gen-app/public/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="http://localhost/~Kento012/ex-gen-app/public/css/overview.css" />

    <script src="http://localhost/~Kento012/ex-gen-app/public/js/jquery-3.3.1.min.js"></script>
    <!-- <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script> -->
    <!-- <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.0/jquery-ui.min.js"></script> -->
    <!-- <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script> -->
    <!-- <script src="http://localhost/~Kento012/ex-gen-app/public/js/d3.layout.cloud.js"></script> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.3.0/lodash.js"></script>
    <script src="http://localhost/~Kento012/ex-gen-app/public/js/bootstrap.min.js"></script>
    <!-- <script src="http://localhost/~Kento012/ex-gen-app/public/js/hello.js"></script> -->


    <script src="https://d3js.org/d3.v5.min.js"></script>
	<script src="https://d3js.org/d3-selection-multi.v1.min.js"></script>
	<script src="https://d3js.org/d3-collection.v1.min.js"></script>
	<script src="https://d3js.org/d3-hierarchy.v1.js"></script>
	<!-- <script src="./d3-cluster-layout.js"></script> -->

</head>

<body>
<div class="container-fluid">

    <div class="row">
        <div class="col-md-2"></div>

        <div class="col-md-8">
            <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
                <!-- <a class="navbar-brand" href="#">Ubunbun</a> -->
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item active">
                            <a class="nav-link" href="http://localhost:3000/">Home <span class="sr-only">(current)</span></a>
                        </li>
                        <li class="nav-item">
                            <form method="post" name="compareForm" id="compareForm" action="http://localhost:3000/compare">
                                <button type="button" id="compareBtn" class="btn btn-success ml-5" disabled>比較</button>
                            </form>
                        </li>
                    </ul>
                    <form class="form-inline mt-2 mt-md-0">
                        <%# <input class="form-control mr-sm-2" id='searchText' type="text" placeholder="Search" aria-label="Search"> %>
                        <%# <button class="btn btn-outline-success my-2 my-sm-0" id="searchBtn" type="button">Search</button> %>
                    </form>
                </div>
            </nav>
            <head>
                <div class="jumbotron text-center alert-secondary">
                    <h2><%= title %></h2>
                    <h5><%= subtitle %></h5>
                </div>
            </head>


			<div>
				<% var dishname = JSON.stringify(dishname); %>
				<% var texture =  JSON.stringify(texture); %>
				<% var rootName =  texture + dishname; %>

				<% var cluster_data = {"name": rootName}; %>
				<% cluster_data["children"] = []; %>

				<!-- <ol> -->
					<% for (var key in content) { %>
						<!-- <li><%# key %></li> -->
						<% var current_cluster = {"name": key}; %>
						<% current_cluster["children"] = []; %>
						<!-- <ol> -->
							<% content[key].forEach(function(recipe, key) { %>
								<!-- <li><%# recipe.title %></li> -->
								 <% var recipe_json = {"name": recipe.title}; %>
								 <% current_cluster["children"].push(recipe_json); %>
							<% }); %>
						<!-- </ol> -->

						<% cluster_data["children"].push(current_cluster); %>
					<% }; %>
				<!-- </ol> -->

			</div>

		<svg width="1000" height="1000" class="d-flex justify-content-center"></svg>

        </div><!-- col-md-8 -->
		<div class="col-md-2"></div>
	</div>


	<script>
		var data = <%- JSON.stringify(cluster_data); %>;
		const recipe_clusters = data["children"];
		const recipe_group_num = Object.keys(recipe_clusters).length
		const recipe_num_in_groups = [];

		for (var key in recipe_clusters) {
			const recipe_group = recipe_clusters[key];
			// console.log(recipe_group);
			const recipe_num = recipe_group["children"].length
			// console.log(recipe_num);
			recipe_num_in_groups.push(recipe_num);

		}


		// 1. 描画用のデータ準備
		// var width = window.innerWidth;
		// var height = window.innerHeight;
		var width = 700;
		var height = 700;
		var rx = width / 2;
		var ry = height / 2;

		var colorScale = d3.scaleOrdinal(d3.schemeSet1);
		// var colorScale = d3.scaleSequential(d3.interpolateRainbow).domain([0, recipe_group_num-1]);
//
		// 2. 描画用データの変換
		root = d3.hierarchy(data);
		var cluster = d3.cluster().size([360, ry - 80])
		cluster(root);

		// 3. svg要素の配置
		// g = d3.select("svg").append("g").attr("transform", "translate(" + rx + "," + ry + ")");
		const translate_x = rx + 200;
		const translate_y = ry + 200;
		g = d3.select("svg").append("g").attr("transform", "scale(0.8, 0.8)translate(" + translate_x + "," + translate_y + ")");
		var link = g.selectAll(".link")
		.data(root.links())
		.enter()
		.append("path")
		.attr("class", "link")
		.attr("fill", "none")
		.attr("stroke", "#555")
		.attr("stroke-width", "1.5px")
		.attr("opacity", "0.6")
		.attr("d", d3.linkRadial()
		.angle(function(d) { return (d.x + 90) * Math.PI / 180; })
		.radius(function(d) { return d.y; }));

		var node = g.selectAll(".node")
		.data(root.descendants())
		.enter()
		.append("g")
		.attr("transform", function(d) { return "rotate(" + (d.x) + ")translate(" + d.y + ")"; })

		node.append("circle")
		.attr("r", 8)
		.attr("stroke", "steelblue")
		.attr("stroke-width", "1.5px")
		.attr("fill", "white")
		.style('fill', function(d,i){ return colorScale(i); })
		.attr('visibility', 'hidden')

		node.append("text")
		.attr("dy", 3)
		.attr("dx", function(d) { return d.x < 90 || d.x > 270 ? 8 : -8; })
		.style("text-anchor", function(d) { return d.x < 90 || d.x > 270 ? "start" : "end"; })
		// .style('font-weight', 'bold')
		.attr('visibility', 'hidden')
		.attr("font-size", "80%")
		.attr("transform", function(d) { return d.x < 90 || d.x > 270 ? null : "rotate(180)"; })
		.text(function(d) { return d.data.name; })

		d3.selectAll('circle')
		.transition()
		.delay(function(d,i) { return i * 10; })
		.attr("visibility", "visible")
		

		$(function(){

			let circle_fill_array = [];
			let recipe_cluster_index = 0;
			let recipe_index = recipe_num_in_groups[recipe_cluster_index];

			$('circle').each(function(i, elem){

				let cluster_depth = elem["__data__"]["depth"];
				if(cluster_depth == 0){

					$(elem).css('fill', 'black');

				} else if(cluster_depth == 1){

					$(elem).next('text').css('visibility', 'visible');
					let circle_fill = $(elem).css('fill');
					circle_fill_array.push(circle_fill);
					const group_id = 'group_' + String(i);
					$(elem).attr('id', group_id);

				} else {

					$(elem).css('fill', circle_fill_array[recipe_cluster_index]);
					const node_class = 'group_' + String(recipe_cluster_index + 1);
					$(elem).attr('class', node_class);

					recipe_index -= 1;
					if (recipe_index == 0) { //同じクラスターのレシピを全部処理できたら
						recipe_cluster_index += 1;
						recipe_index = recipe_num_in_groups[recipe_cluster_index];
					}

				}
			});


			$('circle').on({
				'mouseover': function(event){
					let elem = event.currentTarget;
					let ifVisible = $(elem).next('text').css('visibility');
					let cluster_depth = elem["__data__"]["depth"];

					if (cluster_depth == 1) {

						const group_id = $(elem).attr('id');
						const group_class = 'circle.' + group_id;
						let ifVisible = $(group_class).next('text').css('visibility');


						$(group_class).next('text').each(function(i, elem){

							var t = setTimeout(function() { 
								$(elem).css('visibility', 'visible'); 
								}, 30 * i);        
								
						});

					} else if (cluster_depth == 2){
							$(elem).next('text').css('visibility', 'visible');
					}

				},
				'mouseleave': function(event){

					let elem = event.currentTarget;
					let ifVisible = $(elem).next('text').css('visibility');
					let cluster_depth = elem["__data__"]["depth"];

					if (cluster_depth == 1) {

						const group_id = $(elem).attr('id');
						const group_class = 'circle.' + group_id;
						let ifVisible = $(group_class).next('text').css('visibility');

						$(group_class).next('text').each(function(i, elem){

							var t = setTimeout(function() { 
								$(elem).css('visibility', 'hidden'); 
								}, 10 * i);        
						});
					} else if(cluster_depth == 2){
						$(elem).next('text').css('visibility', 'hidden');
					}

				},
				'click': function(event){
					let elem = event.currentTarget;
					let cluster_depth = elem["__data__"]["depth"];

					if (cluster_depth == 1) {


					} else if (cluster_depth == 2){

					}
				}
			});

		});
	</script>
</body>
</html>
